# Create secrets with
# kubectl create secret generic backboard-secrets \
#   --from-file=ca.crt \
#   --from-file=client.backboard.crt \
#   --from-file=client.backboard.key \
#   --from-literal=DB_USER=xyzzy \
#   --from-literal=DB_ADDR=xyzzy:26257 \
#   --from-literal=DB_NAME=xyzzy \
#   --from-literal=BACKBOARD_GITHUB_TOKEN=xyzzy
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: backboard
  name: backboard
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backboard
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: backboard
    spec:
      containers:
        - image: "gcr.io/cockroach-dev-inf/cockroachdb/backboard:master"
          imagePullPolicy: Always
          name: backboard
          env:
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  key: DB_USER
                  name: backboard-secrets
            - name: DB_ADDR
              valueFrom:
                secretKeyRef:
                  key: DB_ADDR
                  name: backboard-secrets
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  key: DB_NAME
                  name: backboard-secrets
            - name: BACKBOARD_GITHUB_TOKEN
              valueFrom:
                secretKeyRef:
                  key: BACKBOARD_GITHUB_TOKEN
                  name: backboard-secrets
          command: [
            "backboard",
            "--bind", "0.0.0.0:80",
            "--conn", "postgres://$(DB_USER):$(DB_PASSWORD)@$(DB_ADDR)/$(DB_NAME)?sslmode=verify-full&sslrootcert=/secrets/ca.crt",
            "--branch", "release-21.1",
          ]
          ports:
            - containerPort: 80
              protocol: TCP
              name: http
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?ready=1
              port: http
          resources:
            requests:
              # Fairly minimal steady-state requirements.
              cpu: "100m"
              memory: "256Mi"
            limits:
              # Needs more CPU and memory when bootstrapping.
              cpu: "2"
              memory: "768Mi"
          volumeMounts:
            - mountPath: "/secrets"
              name: secrets
      terminationGracePeriodSeconds: 30
      volumes:
        - name: secrets
          secret:
            secretName: backboard-secrets
            defaultMode: 0600
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: backboard
  name: backboard
spec:
  externalTrafficPolicy: Cluster
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
  selector:
    app: backboard
  type: NodePort
